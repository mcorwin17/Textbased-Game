Title:Text Based Adventure Game
Author: Maxwell Corwin
Date Due: May 22 2025
Dates Submitted: MAY 21 2025
Course Title: AP COMPSCI A 
Meeting Time: 8:00 AM
Description: For your final project you will create a text-based adventure game in the style of Zork
Honor Code: I have neither recieved or given unauthorized aid on this assignment
HOWTO: COMPILE JAVA FILES AND RUN 
Input File: AdventureGame.java, Room.java, NPC.java, Entity.java, Player.java, Item.Java
Output File: N/A
Bibiliography:stackoverflow 
Resources:
Tutors:
Comments: Fun game I had a blast making. If I had more time I would've made the world building a lot better and a lot larger. I added a secret room ending you can reach by helping out the doctor based off of his default text in the hospital. Other than that there should be two endings, one bad and one good.
Reflection: This lab took me around 5 hours to do. Lots of the code is repeated and very easy. I did have to look up the selection sort because I don't remember it off the dome. I have made a text based game like this in the past for another class that was in a similar style but you were never able to actually interact with the environment like you can do in this one. The first thing I started to do was planning out everything on a piece of paper. I drew out each location and put in placeholder npcs where I would want them to be. I also thought it was kind of useless to only have the game winning items on the ground so I added a bunch of random items in the hospital and a secret quest to make the game more meaningful. I kind of wanted to add a system where the game would end after the user made 50 inputs but I felt that would kind of ruin the world building I had going on already. So, instead I left it and removed the zombies in the areas and just made it so the bad ending is being an idiot and trying to guess the code. I really liked what I did with the help function because I made lots of commands and made it stupidly obvious what I wanted you to do with each one. The drop command is kind of useless in a way because at no point will you have to drop something. If I had more time I probably would've actually implemented this better but for the sake of this project I just left it as it is. The next step in the project was actually starting somewhere. In my opinion this is one of the hardest things about these types of project as the initial start is weird. You can kind of start from any direction and I chose to first make the entity class. This made the polymorphism throughout all of the classes easier and I was able to take advantage of that and get the code done faster. After the entity class the rest of the classes were easy to make and I just basically looked at what I needed to be created: items, rooms and npcs. From there it was just copy and pasting the repeated code for the dialogues and then making the sort and search implementation. I think that this probably the longest part of the project as I had to create stupid voice lines that kind of related to the npcs job or location. Then came making the puzzle that the user had to complete. At first I was going to do a big dialogue tree but then I realized that it would've been kind of boring to do it like that so I'd rather have the user just go and explore instead of sitting there and constantly typing to an NPC. This way they were kind of left confused on where to go and what to do. For the most part, the hospital is just a decoy from where you actually want to be and the user doesn't know that. However, if they catch onto the doctor's dialogue they can be able to get the secret ending. The bad ending was going to be dying to like mutants or something but it was kind of lame as you don't really know where to go and the instinct of a human in this game would be to explore everywhere. I kind've wanted this game to be like a one and done situation where you play and spend a copious amount of time trying to find the exit rather than just dying over and over again and restarting. This will kind of force them to find the solution a lot faster than giving them an open world without the things that can kill them and forcing them to find out what to do to escape on their own. It does make it kind of boring in the end if you don't know what to do as you'll just be stuck but I think even a toddler could figure out what to do in my game.
It's not really fun to play a game if you know exactly what to do to win so I had my friends play it. They said it was pretty good so I was happy with that response because it took them around 5~7 minutes to find the default exit. However, most of them seemed to miss the dialogue of the doctor and basically didn't even talk to the npcs so they missed the secret ending. I feel like the bad ending is also kind of good because if you don't use the look function that I put in help, you are basically stuck there guessing the code which would lead you to your death. This death also comes out of nowhere because there is no warning for getting it wrong but atleast the user will learn from their mistakes after doing it once. The first ending or default ending should take the user to a dialogue tree of around 3 branches because they need to talk to the roommate twice and then go to the gas station unlock the door, talk to the guard and then give the guard the code to get in. This part of the story is probably the best because you have to actually explore the place and find out which NPC wants what to get out. Other than creativity, I didn't experience any problems with the actual coding of the project. Most of this stuff is routine so it took me a very little amount of time to complete. I would make another game like this again in the future, except it would be on a lot larger scale. I think there could also be more random elements to the game making it fun for me to actually play instead of everything being set in stone on repeat.